=== Blockylicious ===
Contributors:      Tom, Jean, and The WordPress Contributors
Tags:              block
Tested up to:      6.7
Stable tag:        0.1.0
License:           GPL-2.0-or-later
License URI:       https://www.gnu.org/licenses/gpl-2.0.html

Custom plugin with 3? custom blocks and custom text effects. Scaffolded with Create Block Theme, then modified.

== Installation ==

1. Upload the plugin files to the `/wp-content/plugins/` directory, or install the plugin through the WordPress plugins screen directly.
2. Activate the plugin through the 'Plugins' screen in WordPress


== Description ==

Note that the view.js file should be removed if you don't end up using it.
Note that in block.json, at the bottom is "viewScript": "file:./view.js"
You'll need to choose between "viewScript" or "viewScriptModule." The viewScriptModule is a newer field that lets you use the Interactivity API

Note that in block.json the support for html mode is disabled for some blocks.(Editor can't directly edit the code) If you want to enable html mode, change this to _true_
"supports": {
		"html": false, }



== REGISTRATION ==

In this plugin, the init hook uses either the function 'wp_register_block_types_from_metadata_collection' (Added in WP v 6.8)
or 'wp_register_block_metadata_collection' (Added in WP v 6.7) to register custom blocks using a `blocks-manifest.php` file that is generated by the run and build scripts.
 Behind the scenes, it also registers all assets so they can be enqueued through the block editor in the corresponding context.

 see https://make.wordpress.org/core/2025/03/13/more-efficient-block-type-registration-in-6-8/
 and
 https://make.wordpress.org/core/2024/10/17/new-block-type-registration-apis-to-improve-performance-in-wordpress-6-7/

 
It also uses a filter with 'block_categories_all' and a custom function 'blockylicious_add_custom_block_category' to add the category "Blockylicious" to the block inserter in the Editor sidebar


== Frequently Asked Questions ==

= A question that someone might have =

An answer to that question.


== Screenshots ==

1. This screen shot description corresponds to screenshot-1.(png|jpg|jpeg|gif). Note that the screenshot is taken from
the /assets directory or the directory that contains the stable readme.txt (tags or trunk). Screenshots in the /assets
directory take precedence. For example, `/assets/screenshot-1.png` would win over `/tags/4.3/screenshot-1.png`
(or jpg, jpeg, gif).
2. This is the second screen shot

== Changelog ==

= 0.1.0 =
* Release

(JeanK)
Changes to RichText component in clickyButton/edit.js:
Added identifier='labelText'
Removed this line: onSplit={() => { }} onReplace={() => { }}
Changes to clickyButton/block.json: Added "supports": "splitting": false
Why?
WordPress 6.6 and later versions introduced a unified approach to block splitting, replacing the onSplit prop in the RichText component with the "splitting" key in block.json.
RichTextâ€™s optional onSplit prop was deprecated. Since the block.json "splitting" setting determines if we can split a block, we no longer need the block to pass an onSplit function.

== More Information ==
My local WP git repos are here: /Users/jeankuyk/GitRepos/WP-Plugin-repos/

Low Highlight Rich Text effects
An additional script in index.js was added to register a custom text effect. NOT WORKING so far.
